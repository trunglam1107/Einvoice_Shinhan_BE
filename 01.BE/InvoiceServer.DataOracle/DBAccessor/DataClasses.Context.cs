//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InvoiceServer.Data.DBAccessor
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataClassesDataContext : DbContext
    {
        public DataClassesDataContext()
            : base("name=DataClassesDataContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ANNOUNCEMENT> ANNOUNCEMENTs { get; set; }
        public virtual DbSet<AUTONUMBERSETTING> AUTONUMBERSETTINGs { get; set; }
        public virtual DbSet<CANCELLINGINVOICE> CANCELLINGINVOICEs { get; set; }
        public virtual DbSet<CITY> CITies { get; set; }
        public virtual DbSet<CLIENT> CLIENTs { get; set; }
        public virtual DbSet<CONFIGEMAILSERVER> CONFIGEMAILSERVERs { get; set; }
        public virtual DbSet<CURRENCY> CURRENCies { get; set; }
        public virtual DbSet<DELETINGINVOICE> DELETINGINVOICEs { get; set; }
        public virtual DbSet<EMAILACTIVE> EMAILACTIVEs { get; set; }
        public virtual DbSet<EMAILACTIVEFILEATTACH> EMAILACTIVEFILEATTACHes { get; set; }
        public virtual DbSet<EMAILACTIVEREFERENCE> EMAILACTIVEREFERENCEs { get; set; }
        public virtual DbSet<FUNCTION> FUNCTIONS { get; set; }
        public virtual DbSet<GATEWAY_LOG> GATEWAY_LOG { get; set; }
        public virtual DbSet<HISTORYREPORTGENERAL> HISTORYREPORTGENERALs { get; set; }
        public virtual DbSet<HOLDINVOICE> HOLDINVOICEs { get; set; }
        public virtual DbSet<HOLDINVOICEDETAIL> HOLDINVOICEDETAILs { get; set; }
        public virtual DbSet<IMPORT_LOG> IMPORT_LOG { get; set; }
        public virtual DbSet<INVOICE> INVOICEs { get; set; }
        public virtual DbSet<INVOICE_HIST> INVOICE_HIST { get; set; }
        public virtual DbSet<INVOICEDECLARATION> INVOICEDECLARATIONs { get; set; }
        public virtual DbSet<INVOICEDECLARATIONRELEASE> INVOICEDECLARATIONRELEASEs { get; set; }
        public virtual DbSet<INVOICEDECLARATIONRELEASEREGISTERTYPE> INVOICEDECLARATIONRELEASEREGISTERTYPEs { get; set; }
        public virtual DbSet<INVOICEDETAIL> INVOICEDETAILs { get; set; }
        public virtual DbSet<INVOICEDETAIL_HIST> INVOICEDETAIL_HIST { get; set; }
        public virtual DbSet<INVOICEGIFT> INVOICEGIFTs { get; set; }
        public virtual DbSet<INVOICERELEAS> INVOICERELEASES { get; set; }
        public virtual DbSet<INVOICERELEASESDETAIL> INVOICERELEASESDETAILs { get; set; }
        public virtual DbSet<INVOICERELEASESTEMPLATE> INVOICERELEASESTEMPLATEs { get; set; }
        public virtual DbSet<INVOICESAMPLE> INVOICESAMPLEs { get; set; }
        public virtual DbSet<INVOICESYSTEMSETTING> INVOICESYSTEMSETTINGs { get; set; }
        public virtual DbSet<INVOICETEMPLATE> INVOICETEMPLATEs { get; set; }
        public virtual DbSet<INVOICETEMPLATESAMPLE> INVOICETEMPLATESAMPLEs { get; set; }
        public virtual DbSet<INVOICETYPE> INVOICETYPEs { get; set; }
        public virtual DbSet<JOB> JOBS { get; set; }
        public virtual DbSet<KEYSTORE> KEYSTOREs { get; set; }
        public virtual DbSet<LASTKEY> LASTKEYs { get; set; }
        public virtual DbSet<LOGINUSER> LOGINUSERs { get; set; }
        public virtual DbSet<MINVOICE_DATA> MINVOICE_DATA { get; set; }
        public virtual DbSet<MYCOMPANY> MYCOMPANies { get; set; }
        public virtual DbSet<MYCOMPANYUPGRADE> MYCOMPANYUPGRADEs { get; set; }
        public virtual DbSet<NOTIFICATIONMINVOICE> NOTIFICATIONMINVOICEs { get; set; }
        public virtual DbSet<NOTIFICATIONUSEINVOICE> NOTIFICATIONUSEINVOICEs { get; set; }
        public virtual DbSet<NOTIFICATIONUSEINVOICEDETAIL> NOTIFICATIONUSEINVOICEDETAILs { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTs { get; set; }
        public virtual DbSet<QUARZTJOB> QUARZTJOBs { get; set; }
        public virtual DbSet<QUEUECREATEFILEINVOICE> QUEUECREATEFILEINVOICEs { get; set; }
        public virtual DbSet<REGISTERTEMPLATE> REGISTERTEMPLATES { get; set; }
        public virtual DbSet<RELEASEANNOUNCEMENT> RELEASEANNOUNCEMENTs { get; set; }
        public virtual DbSet<RELEASEANNOUNCEMENTDETAIL> RELEASEANNOUNCEMENTDETAILs { get; set; }
        public virtual DbSet<RELEASEINVOICE> RELEASEINVOICEs { get; set; }
        public virtual DbSet<RELEASEINVOICEDETAIL> RELEASEINVOICEDETAILs { get; set; }
        public virtual DbSet<REPORTCANCELLING> REPORTCANCELLINGs { get; set; }
        public virtual DbSet<REPORTCANCELLINGDETAIL> REPORTCANCELLINGDETAILs { get; set; }
        public virtual DbSet<ROLE> ROLEs { get; set; }
        public virtual DbSet<ROLEFUNCTION> ROLEFUNCTIONs { get; set; }
        public virtual DbSet<SEQUENCE_CONFIG> SEQUENCE_CONFIG { get; set; }
        public virtual DbSet<SERVERSIGNSETTING> SERVERSIGNSETTINGs { get; set; }
        public virtual DbSet<SESSIONUPLOADEDTOKEN> SESSIONUPLOADEDTOKENs { get; set; }
        public virtual DbSet<SIGNATURE> SIGNATUREs { get; set; }
        public virtual DbSet<SIGNDETAIL> SIGNDETAILs { get; set; }
        public virtual DbSet<SOFTVENDOR> SOFTVENDORs { get; set; }
        public virtual DbSet<STATISTICAL> STATISTICALs { get; set; }
        public virtual DbSet<SYMBOL> SYMBOLs { get; set; }
        public virtual DbSet<SYSTEMLOG> SYSTEMLOGS { get; set; }
        public virtual DbSet<SYSTEMSETTING> SYSTEMSETTINGs { get; set; }
        public virtual DbSet<TAX> TAXes { get; set; }
        public virtual DbSet<TAXDEPARTMENT> TAXDEPARTMENTs { get; set; }
        public virtual DbSet<TYPEPAYMENT> TYPEPAYMENTs { get; set; }
        public virtual DbSet<UNITLIST> UNITLISTs { get; set; }
        public virtual DbSet<USERLEVEL> USERLEVELs { get; set; }
        public virtual DbSet<INVOICEREPLACE> INVOICEREPLACEs { get; set; }
        public virtual DbSet<MYCOMPANY_BK> MYCOMPANY_BK { get; set; }
        public virtual DbSet<UV_GETFUNCTIONOFUSER> UV_GETFUNCTIONOFUSER { get; set; }
    
        public virtual int APPROVE_INVOICE(string p_DATE, Nullable<decimal> p_COMPANYID, string p_SYMBOL, Nullable<decimal> p_INVOICEID, ObjectParameter p_SUCCESS)
        {
            var p_DATEParameter = p_DATE != null ?
                new ObjectParameter("P_DATE", p_DATE) :
                new ObjectParameter("P_DATE", typeof(string));
    
            var p_COMPANYIDParameter = p_COMPANYID.HasValue ?
                new ObjectParameter("P_COMPANYID", p_COMPANYID) :
                new ObjectParameter("P_COMPANYID", typeof(decimal));
    
            var p_SYMBOLParameter = p_SYMBOL != null ?
                new ObjectParameter("P_SYMBOL", p_SYMBOL) :
                new ObjectParameter("P_SYMBOL", typeof(string));
    
            var p_INVOICEIDParameter = p_INVOICEID.HasValue ?
                new ObjectParameter("P_INVOICEID", p_INVOICEID) :
                new ObjectParameter("P_INVOICEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("APPROVE_INVOICE", p_DATEParameter, p_COMPANYIDParameter, p_SYMBOLParameter, p_INVOICEIDParameter, p_SUCCESS);
        }
    
        public virtual int GET_EINVOICE_ACCOUNTPORTAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_EINVOICE_ACCOUNTPORTAL");
        }
    
        public virtual int GET_INVOICE_DETAIL(string p_INVOICEIDS)
        {
            var p_INVOICEIDSParameter = p_INVOICEIDS != null ?
                new ObjectParameter("P_INVOICEIDS", p_INVOICEIDS) :
                new ObjectParameter("P_INVOICEIDS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_INVOICE_DETAIL", p_INVOICEIDSParameter);
        }
    
        public virtual int INVOICENO_CHECK(string p_DATE, Nullable<decimal> p_COMPANYID, string p_SYMBOL, ObjectParameter p_SUCCESS)
        {
            var p_DATEParameter = p_DATE != null ?
                new ObjectParameter("P_DATE", p_DATE) :
                new ObjectParameter("P_DATE", typeof(string));
    
            var p_COMPANYIDParameter = p_COMPANYID.HasValue ?
                new ObjectParameter("P_COMPANYID", p_COMPANYID) :
                new ObjectParameter("P_COMPANYID", typeof(decimal));
    
            var p_SYMBOLParameter = p_SYMBOL != null ?
                new ObjectParameter("P_SYMBOL", p_SYMBOL) :
                new ObjectParameter("P_SYMBOL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INVOICENO_CHECK", p_DATEParameter, p_COMPANYIDParameter, p_SYMBOLParameter, p_SUCCESS);
        }
    
        public virtual int INVOICE_REPLACE_SEARCH(Nullable<decimal> p_COMPANYID, string p_SYMBOL, Nullable<decimal> p_INVOICENO)
        {
            var p_COMPANYIDParameter = p_COMPANYID.HasValue ?
                new ObjectParameter("P_COMPANYID", p_COMPANYID) :
                new ObjectParameter("P_COMPANYID", typeof(decimal));
    
            var p_SYMBOLParameter = p_SYMBOL != null ?
                new ObjectParameter("P_SYMBOL", p_SYMBOL) :
                new ObjectParameter("P_SYMBOL", typeof(string));
    
            var p_INVOICENOParameter = p_INVOICENO.HasValue ?
                new ObjectParameter("P_INVOICENO", p_INVOICENO) :
                new ObjectParameter("P_INVOICENO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INVOICE_REPLACE_SEARCH", p_COMPANYIDParameter, p_SYMBOLParameter, p_INVOICENOParameter);
        }
    
        public virtual int INVOICE_REPLACE_SEARCH_ANNOUNCE(Nullable<decimal> p_INVOICEID)
        {
            var p_INVOICEIDParameter = p_INVOICEID.HasValue ?
                new ObjectParameter("P_INVOICEID", p_INVOICEID) :
                new ObjectParameter("P_INVOICEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INVOICE_REPLACE_SEARCH_ANNOUNCE", p_INVOICEIDParameter);
        }
    
        public virtual int INVOICE_SEARCH(Nullable<decimal> p_INVOICESAMPLE, Nullable<decimal> p_INVOICENO, string p_DATEFROM, string p_DATETO, Nullable<decimal> p_INVOICESTATUS, string p_CIF, string p_TAXCODE, string p_CUSTOMERNAME, Nullable<decimal> p_COMPANYID, string p_SYMBOL, string p_BRANCHCODE, Nullable<decimal> p_IMPORTTYPE, string p_VATTYPE, Nullable<decimal> p_SKIP, Nullable<decimal> p_TAKE, Nullable<decimal> p_COUNT)
        {
            var p_INVOICESAMPLEParameter = p_INVOICESAMPLE.HasValue ?
                new ObjectParameter("P_INVOICESAMPLE", p_INVOICESAMPLE) :
                new ObjectParameter("P_INVOICESAMPLE", typeof(decimal));
    
            var p_INVOICENOParameter = p_INVOICENO.HasValue ?
                new ObjectParameter("P_INVOICENO", p_INVOICENO) :
                new ObjectParameter("P_INVOICENO", typeof(decimal));
    
            var p_DATEFROMParameter = p_DATEFROM != null ?
                new ObjectParameter("P_DATEFROM", p_DATEFROM) :
                new ObjectParameter("P_DATEFROM", typeof(string));
    
            var p_DATETOParameter = p_DATETO != null ?
                new ObjectParameter("P_DATETO", p_DATETO) :
                new ObjectParameter("P_DATETO", typeof(string));
    
            var p_INVOICESTATUSParameter = p_INVOICESTATUS.HasValue ?
                new ObjectParameter("P_INVOICESTATUS", p_INVOICESTATUS) :
                new ObjectParameter("P_INVOICESTATUS", typeof(decimal));
    
            var p_CIFParameter = p_CIF != null ?
                new ObjectParameter("P_CIF", p_CIF) :
                new ObjectParameter("P_CIF", typeof(string));
    
            var p_TAXCODEParameter = p_TAXCODE != null ?
                new ObjectParameter("P_TAXCODE", p_TAXCODE) :
                new ObjectParameter("P_TAXCODE", typeof(string));
    
            var p_CUSTOMERNAMEParameter = p_CUSTOMERNAME != null ?
                new ObjectParameter("P_CUSTOMERNAME", p_CUSTOMERNAME) :
                new ObjectParameter("P_CUSTOMERNAME", typeof(string));
    
            var p_COMPANYIDParameter = p_COMPANYID.HasValue ?
                new ObjectParameter("P_COMPANYID", p_COMPANYID) :
                new ObjectParameter("P_COMPANYID", typeof(decimal));
    
            var p_SYMBOLParameter = p_SYMBOL != null ?
                new ObjectParameter("P_SYMBOL", p_SYMBOL) :
                new ObjectParameter("P_SYMBOL", typeof(string));
    
            var p_BRANCHCODEParameter = p_BRANCHCODE != null ?
                new ObjectParameter("P_BRANCHCODE", p_BRANCHCODE) :
                new ObjectParameter("P_BRANCHCODE", typeof(string));
    
            var p_IMPORTTYPEParameter = p_IMPORTTYPE.HasValue ?
                new ObjectParameter("P_IMPORTTYPE", p_IMPORTTYPE) :
                new ObjectParameter("P_IMPORTTYPE", typeof(decimal));
    
            var p_VATTYPEParameter = p_VATTYPE != null ?
                new ObjectParameter("P_VATTYPE", p_VATTYPE) :
                new ObjectParameter("P_VATTYPE", typeof(string));
    
            var p_SKIPParameter = p_SKIP.HasValue ?
                new ObjectParameter("P_SKIP", p_SKIP) :
                new ObjectParameter("P_SKIP", typeof(decimal));
    
            var p_TAKEParameter = p_TAKE.HasValue ?
                new ObjectParameter("P_TAKE", p_TAKE) :
                new ObjectParameter("P_TAKE", typeof(decimal));
    
            var p_COUNTParameter = p_COUNT.HasValue ?
                new ObjectParameter("P_COUNT", p_COUNT) :
                new ObjectParameter("P_COUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INVOICE_SEARCH", p_INVOICESAMPLEParameter, p_INVOICENOParameter, p_DATEFROMParameter, p_DATETOParameter, p_INVOICESTATUSParameter, p_CIFParameter, p_TAXCODEParameter, p_CUSTOMERNAMEParameter, p_COMPANYIDParameter, p_SYMBOLParameter, p_BRANCHCODEParameter, p_IMPORTTYPEParameter, p_VATTYPEParameter, p_SKIPParameter, p_TAKEParameter, p_COUNTParameter);
        }
    
        public virtual int SP_CLIENT_USING(Nullable<decimal> sP_CLIENTID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_CLIENTIDParameter = sP_CLIENTID.HasValue ?
                new ObjectParameter("SP_CLIENTID", sP_CLIENTID) :
                new ObjectParameter("SP_CLIENTID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CLIENT_USING", sP_CLIENTIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int SP_COMPANY_USING(Nullable<decimal> u_COMPANYID, ObjectParameter u_RESULTOUTPUT)
        {
            var u_COMPANYIDParameter = u_COMPANYID.HasValue ?
                new ObjectParameter("U_COMPANYID", u_COMPANYID) :
                new ObjectParameter("U_COMPANYID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_COMPANY_USING", u_COMPANYIDParameter, u_RESULTOUTPUT);
        }
    
        public virtual int SP_CURRENCY_USING(Nullable<decimal> sP_CURRENCYID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_CURRENCYIDParameter = sP_CURRENCYID.HasValue ?
                new ObjectParameter("SP_CURRENCYID", sP_CURRENCYID) :
                new ObjectParameter("SP_CURRENCYID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CURRENCY_USING", sP_CURRENCYIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int SP_GET_INVOICE_PRINT(Nullable<decimal> pR_INVOICEID)
        {
            var pR_INVOICEIDParameter = pR_INVOICEID.HasValue ?
                new ObjectParameter("PR_INVOICEID", pR_INVOICEID) :
                new ObjectParameter("PR_INVOICEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_INVOICE_PRINT", pR_INVOICEIDParameter);
        }
    
        public virtual int SP_INSERT_EMAIL_INVOICE(Nullable<decimal> eCARE_NO, string rECEIVER_ID, string rECEIVER_NM, string rECEIVER, string sENDER_NM, string sENDER, string jONMUN, Nullable<decimal> dATA_CNT, string fILE_PATH1, string fILE_PATH2, string fILE_PATH3, Nullable<decimal> rEF_ID)
        {
            var eCARE_NOParameter = eCARE_NO.HasValue ?
                new ObjectParameter("ECARE_NO", eCARE_NO) :
                new ObjectParameter("ECARE_NO", typeof(decimal));
    
            var rECEIVER_IDParameter = rECEIVER_ID != null ?
                new ObjectParameter("RECEIVER_ID", rECEIVER_ID) :
                new ObjectParameter("RECEIVER_ID", typeof(string));
    
            var rECEIVER_NMParameter = rECEIVER_NM != null ?
                new ObjectParameter("RECEIVER_NM", rECEIVER_NM) :
                new ObjectParameter("RECEIVER_NM", typeof(string));
    
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var sENDER_NMParameter = sENDER_NM != null ?
                new ObjectParameter("SENDER_NM", sENDER_NM) :
                new ObjectParameter("SENDER_NM", typeof(string));
    
            var sENDERParameter = sENDER != null ?
                new ObjectParameter("SENDER", sENDER) :
                new ObjectParameter("SENDER", typeof(string));
    
            var jONMUNParameter = jONMUN != null ?
                new ObjectParameter("JONMUN", jONMUN) :
                new ObjectParameter("JONMUN", typeof(string));
    
            var dATA_CNTParameter = dATA_CNT.HasValue ?
                new ObjectParameter("DATA_CNT", dATA_CNT) :
                new ObjectParameter("DATA_CNT", typeof(decimal));
    
            var fILE_PATH1Parameter = fILE_PATH1 != null ?
                new ObjectParameter("FILE_PATH1", fILE_PATH1) :
                new ObjectParameter("FILE_PATH1", typeof(string));
    
            var fILE_PATH2Parameter = fILE_PATH2 != null ?
                new ObjectParameter("FILE_PATH2", fILE_PATH2) :
                new ObjectParameter("FILE_PATH2", typeof(string));
    
            var fILE_PATH3Parameter = fILE_PATH3 != null ?
                new ObjectParameter("FILE_PATH3", fILE_PATH3) :
                new ObjectParameter("FILE_PATH3", typeof(string));
    
            var rEF_IDParameter = rEF_ID.HasValue ?
                new ObjectParameter("REF_ID", rEF_ID) :
                new ObjectParameter("REF_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_EMAIL_INVOICE", eCARE_NOParameter, rECEIVER_IDParameter, rECEIVER_NMParameter, rECEIVERParameter, sENDER_NMParameter, sENDERParameter, jONMUNParameter, dATA_CNTParameter, fILE_PATH1Parameter, fILE_PATH2Parameter, fILE_PATH3Parameter, rEF_IDParameter);
        }
    
        public virtual int SP_INVOICESAMPLE_USING(Nullable<decimal> sP_INVOICESAMPLEID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_INVOICESAMPLEIDParameter = sP_INVOICESAMPLEID.HasValue ?
                new ObjectParameter("SP_INVOICESAMPLEID", sP_INVOICESAMPLEID) :
                new ObjectParameter("SP_INVOICESAMPLEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INVOICESAMPLE_USING", sP_INVOICESAMPLEIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int SP_INVOICETYPE_USING(Nullable<decimal> sP_INVOICETYPEID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_INVOICETYPEIDParameter = sP_INVOICETYPEID.HasValue ?
                new ObjectParameter("SP_INVOICETYPEID", sP_INVOICETYPEID) :
                new ObjectParameter("SP_INVOICETYPEID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INVOICETYPE_USING", sP_INVOICETYPEIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int SP_LOGINUSER_USING(Nullable<decimal> sP_USERSID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_USERSIDParameter = sP_USERSID.HasValue ?
                new ObjectParameter("SP_USERSID", sP_USERSID) :
                new ObjectParameter("SP_USERSID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LOGINUSER_USING", sP_USERSIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int SP_PRODUCT_USING(Nullable<decimal> sP_PRODUCTID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_PRODUCTIDParameter = sP_PRODUCTID.HasValue ?
                new ObjectParameter("SP_PRODUCTID", sP_PRODUCTID) :
                new ObjectParameter("SP_PRODUCTID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PRODUCT_USING", sP_PRODUCTIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int SP_UNIT_USING(Nullable<decimal> sP_UNITID, ObjectParameter sP_RESULTOUTPUT)
        {
            var sP_UNITIDParameter = sP_UNITID.HasValue ?
                new ObjectParameter("SP_UNITID", sP_UNITID) :
                new ObjectParameter("SP_UNITID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UNIT_USING", sP_UNITIDParameter, sP_RESULTOUTPUT);
        }
    
        public virtual int TEST_SETINVOICENO(Nullable<decimal> vARCOMPANYID)
        {
            var vARCOMPANYIDParameter = vARCOMPANYID.HasValue ?
                new ObjectParameter("VARCOMPANYID", vARCOMPANYID) :
                new ObjectParameter("VARCOMPANYID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TEST_SETINVOICENO", vARCOMPANYIDParameter);
        }
    }
}
